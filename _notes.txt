
Formik is a small library helps to deal with forms in React.

Formik used for:
Handle (Managing) form data
validation
Error messages 
handle form submission

4. use formik uses object as its parameter.
useFormik({}) ----> object inside parameter
This object contains the properties and methods to manage form states.

5. handleChange ----> this method is formik's helper to update the values objects.

7. There are three parts of validation:
   values.name 
   errors.name 
   errors.name = 'This field is required

12. We can use this for refactoring the code:

onChange={formik.handleChange}  
onBlur={formik.handleBlur}
alue={formik.values.name}

Instead the above 3 lines we can write 
{...formik.getFieldProps('name')} 

we can write whatever the field name is in place of "name.

13. Formik components: To save time formik provides few components that implicitly uses react context tom make our code less verbose. (shorten the code)
Some components Formik provides:
1. Formik
2. Form
3. field
4. ErrorMessage

Formik component:
import Formik from 'Formik'
Remove useFormik function and put the contents of useFormik inside <Formik>Put here</Formik>
const formik = useFormik({
    initialValues,
    onSubmit,
    validationSchema,
    // validate,
  });


14. Form component:
    1. Import Form from 'Formik'
    2. Replace html form element with Form component
    3. Remove the onSubmit prop  -----> onSubmit={formik.handleSubmit}

15. Field component
    1. import Field from 'Formik'
    2. replace each input tag with Field component tag
    3. get rid of(remove) getFieldProps helper method from each of the fields

16. ErrorMessage Component
    1. import ErrorMessage from 'Formik'
    2. Replace the block of code rendering the error message with ErrorMessage component

     {formik.touched.name && formik.errors.name ? (
            <div className="error">{formik.errors.name}</div>
            ) : null}

            Replace this code by <ErrorMessage />

    3. Pass in a name prop which is equal to the name attribute on the Field Component.

    <ErrorMessage  name="name"/>

    Here, "name" is the name you have give to the field.